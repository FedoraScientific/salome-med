# - Config file for the @PROJECT_NAME@ package
# It defines the following variables. 
# Specific to the pacakge @PROJECT_NAME@ itself:
#  @PROJECT_NAME_UC@_ROOT_DIR_EXP - the root path of the installation providing this CMake file
#

###############################################################
#  Copyright (C) 2007-2013  CEA/DEN, EDF R&D, OPEN CASCADE
#
#  Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
#  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
#  See http://www.salome-platform.org/ or
#  email : webmaster.salome@opencascade.com
###############################################################

### Initialisation performed by CONFIGURE_PACKAGE_CONFIG_FILE:
@PACKAGE_INIT@

# Load the dependencies for the libraries of @PROJECT_NAME@ 
# (contains definitions for IMPORTED targets). This is only 
# imported if we are not built as a subproject (in this case targets are already there)
IF(NOT TARGET medcoupling AND NOT @PROJECT_NAME@_BINARY_DIR)
  INCLUDE("@PACKAGE_SALOME_INSTALL_CMAKE_LOCAL@/@PROJECT_NAME@Targets.cmake")
ENDIF()   

# Package root dir:
SET_AND_CHECK(MED_ROOT_DIR_EXP "@PACKAGE_CMAKE_INSTALL_PREFIX@")

# Include directories and definitions
SET_AND_CHECK(MED_INCLUDE_DIRS "${MED_ROOT_DIR_EXP}/@SALOME_INSTALL_HEADERS@")
SET(MED_INCLUDE_DIRS "${MED_INCLUDE_DIRS};@_SalomeMED_EXTRA_HEADERS@")
SET(MED_DEFINITIONS)

# Package specific environment variables
@_SalomeMED_EXTRA_ENV_FULL@

#### Now the specificities

# Options exported by the package:
SET(SALOME_MED_STANDALONE     @SALOME_MED_STANDALONE@)
SET(SALOME_MED_MICROMED       @SALOME_MED_MICROMED@)
SET(SALOME_MED_ENABLE_PYTHON  @SALOME_MED_ENABLE_PYTHON@)
SET(SALOME_USE_MPI            @SALOME_USE_MPI@)
SET(SALOME_MED_BUILD_DOC      @SALOME_BUILD_DOC@)
SET(SALOME_MED_BUILD_TESTS    @SALOME_BUILD_TESTS@)
SET(SALOME_MED_BUILD_GUI      @SALOME_BUILD_GUI@)

# Advanced options

# Level 1 prerequisites:

# Optional level 1 prerequisites:

IF(NOT SALOME_MED_MICROMED)
  SET_AND_CHECK(MEDFILE_ROOT_DIR_EXP "@PACKAGE_MEDFILE_ROOT_DIR@")
ENDIF(NOT SALOME_MED_MICROMED)

IF(NOT SALOME_MED_STANDALONE)
  SET_AND_CHECK(KERNEL_ROOT_DIR_EXP "@PACKAGE_KERNEL_ROOT_DIR@")
  LIST(APPEND MED_DEFINITIONS "@KERNEL_DEFINITIONS@")
ENDIF(NOT SALOME_MED_STANDALONE)
IF(SALOME_MED_BUILD_GUI)
  SET_AND_CHECK(GUI_ROOT_DIR_EXP "@PACKAGE_GUI_ROOT_DIR@")
  LIST(APPEND MED_DEFINITIONS "@GUI_DEFINITIONS@")
ENDIF(SALOME_MED_BUILD_GUI)

# For all prerequisites, load the corresponding targets if the package was used 
# in CONFIG mode. This ensures dependent projects link correctly
# without having to set LD_LIBRARY_PATH.
# Many of them will be automatically loaded from KERNEL or GUI:

SET(_PREREQ Metis ParMetis Scotch XDR CAS Qt4 CppUnit Graphviz Doxygen Sphinx MPI omniORB 
            PThread Boost libXml2 Python HDF5 MEDFile)
SET(_PREREQ_CONFIG_DIR "@Metis_DIR@" "@ParMetis_DIR@" "@Scotch_DIR@" "@XDR_DIR@" "@CAS_DIR@" "@Qt4_DIR@"
                       "@CppUnit_DIR@" "@Graphviz_DIR@" "@Doxygen_DIR@" "@Sphinx_DIR@" "@MPI_DIR@" 
                       "@omniORB_DIR@" "@PThread_DIR@" "@Boost_DIR@" "@libXml2_DIR@" 
                       "@Python_DIR@" "@HDF5_DIR@"  "@MEDFile_DIR@")

LIST(LENGTH _PREREQ_CONFIG_DIR _list_len)
# Another CMake stupidity - FOREACH(... RANGE r) generates r+1 numbers ...
MATH(EXPR _range "${_list_len}-1")
FOREACH(_p RANGE ${_range})  
  LIST(GET _PREREQ            ${_p} _pkg    )
  LIST(GET _PREREQ_CONFIG_DIR ${_p} _pkg_dir)
  IF(_pkg_dir)
     MESSAGE(STATUS "===> Reloading targets from ${_pkg} ...")
     FIND_PACKAGE(${_pkg} REQUIRED NO_MODULE 
          PATHS "${_pkg_dir}" 
          NO_DEFAULT_PATH)
  ENDIF()
ENDFOREACH()

# Installation directories
SET(SALOME_INSTALL_BINS "@SALOME_INSTALL_BINS@")
SET(SALOME_INSTALL_LIBS "@SALOME_INSTALL_LIBS@")
SET(SALOME_INSTALL_IDLS "@SALOME_INSTALL_IDLS@")
SET(SALOME_INSTALL_HEADERS "@SALOME_INSTALL_HEADERS@")
SET(SALOME_INSTALL_SCRIPT_SCRIPTS "@SALOME_INSTALL_SCRIPT_SCRIPTS@")
SET(SALOME_INSTALL_SCRIPT_DATA "@SALOME_INSTALL_SCRIPT_DATA@")
SET(SALOME_INSTALL_SCRIPT_PYTHON "@SALOME_INSTALL_SCRIPT_PYTHON@")
SET(SALOME_INSTALL_APPLISKEL_SCRIPTS "@SALOME_INSTALL_APPLISKEL_SCRIPTS@")
SET(SALOME_INSTALL_APPLISKEL_PYTHON "@SALOME_INSTALL_APPLISKEL_PYTHON@") 
SET(SALOME_INSTALL_CMAKE "@SALOME_INSTALL_CMAKE@")
SET(SALOME_INSTALL_CMAKE_LOCAL "@SALOME_INSTALL_CMAKE_LOCAL@")
SET(SALOME_INSTALL_PYTHON "@SALOME_INSTALL_PYTHON@")
SET(SALOME_INSTALL_PYTHON_SHARED "@SALOME_INSTALL_PYTHON_SHARED@")
SET(SALOME_INSTALL_RES "@SALOME_INSTALL_RES@")

IF(SALOME_MED_BUILD_GUI) 
  # Include GUI targets if they were not already loaded:
  IF(NOT (TARGET Event)) 
    INCLUDE("${GUI_ROOT_DIR_EXP}/${SALOME_INSTALL_CMAKE_LOCAL}/SalomeGUITargets.cmake")
  ENDIF()
ELSE(SALOME_MED_BUILD_GUI)
  IF(NOT SALOME_MED_STANDALONE) 
    # Include KERNEL targets if they were not already loaded:
    IF(NOT (TARGET SALOMEBasics) AND NOT SALOME_MED_STANDALONE) 
      INCLUDE("${KERNEL_ROOT_DIR_EXP}/${SALOME_INSTALL_CMAKE}/SalomeKERNELTargets.cmake")
    ENDIF()
  ENDIF(NOT SALOME_MED_STANDALONE) 
ENDIF(SALOME_MED_BUILD_GUI)

# Exposed MED targets:
SET(MED_interpkernel interpkernel)
SET(MED_medcoupling medcoupling)
SET(MED_medcouplingremapper medcouplingremapper)
SET(MED_medloader medloader)
SET(MED_paramedmem paramedmem)
SET(MED_paramedloader paramedloader)
SET(MED_SalomeIDLMED SalomeIDLMED)
SET(MED_medcouplingcorba medcouplingcorba)
SET(MED_medcouplingclient medcouplingclient)
